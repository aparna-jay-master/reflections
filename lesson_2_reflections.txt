What happens when you initialize a repository? Why do you need to do it?
	It creates a hidden folder that stores the repository of changes.  We need
	to tell Git that we want to track these changes.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area is where git knows we are working on these files.  It can
	allow us to tell git to watch these files.

How can you use the staging area to make sure you have one commit per logical
change?
	You can see what changes are all going to be recorded in the staging area
	and see that they make sense for one commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Sometimes we want our projects to go in different directions.  In this case
	Git will keep track of the different directions we go allowing us to edit
	files in two different ways.

How do the diagrams help you visualize the branch structure?
	It's like a tree!

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	It merges the 2 files so that you can take in changes from both.  It merges
	with the main branch so that's why.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	automatic is easy, esp for 1,000s of lines of code.  Going through every change
	would be tedious.  But automatic increases mistakes and bugs.